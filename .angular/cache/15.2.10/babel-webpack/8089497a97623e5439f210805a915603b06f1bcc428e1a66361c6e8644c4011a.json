{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/button\";\nfunction EnterWrestlerDetailsComponent_mat_error_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Name Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EnterWrestlerDetailsComponent_mat_error_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Health 0 to 100 reuired\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EnterWrestlerDetailsComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"div\", 2)(2, \"div\")(3, \"mat-form-field\", 3)(4, \"mat-label\");\n    i0.ɵɵtext(5, \"Move Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 13);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 6)(8, \"mat-form-field\", 3)(9, \"mat-label\");\n    i0.ɵɵtext(10, \"Move Damage:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"input\", 14);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"div\", 6)(13, \"mat-form-field\", 15)(14, \"mat-label\");\n    i0.ɵɵtext(15, \"Move Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"select\", 16)(17, \"option\", 17);\n    i0.ɵɵtext(18, \"Signature\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"option\", 18);\n    i0.ɵɵtext(20, \"Finisher\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(21, \"div\", 6)(22, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function EnterWrestlerDetailsComponent_div_19_Template_button_click_22_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const i_r4 = restoredCtx.index;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.removeMove(i_r4));\n    });\n    i0.ɵɵtext(23, \"Remove Move\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const i_r4 = ctx.index;\n    i0.ɵɵproperty(\"formGroupName\", i_r4);\n  }\n}\nexport let EnterWrestlerDetailsComponent = /*#__PURE__*/(() => {\n  class EnterWrestlerDetailsComponent {\n    constructor(fb, dialogRef, cdr) {\n      this.fb = fb;\n      this.dialogRef = dialogRef;\n      this.cdr = cdr;\n      this.submitWrestler = new EventEmitter();\n      this.images = [\"../../assets/charlotte-flair.png\", \"../../assets/john-cena-render-1-png-clipart.jpg\", \"../../assets/The-Rock-PNG-Picture.png\", \"../../assets/WWE-PNG-Free-Download.png\"];\n      this.wrestlerForm = this.fb.group({\n        name: ['', Validators.required],\n        health: [100, [Validators.required, Validators.min(0), Validators.max(100)]],\n        moves: this.fb.array([])\n      });\n    }\n    addMove() {\n      const moves = this.wrestlerForm.get('moves');\n      moves.push(this.fb.group({\n        name: ['', Validators.required],\n        damage: [0, [Validators.required, Validators.min(0), Validators.max(100)]],\n        type: ['', Validators.required]\n      }));\n      this.cdr.detectChanges();\n    }\n    removeMove(index) {\n      const moves = this.wrestlerForm.get('moves');\n      moves.removeAt(index);\n      this.cdr.detectChanges();\n    }\n    addPlayer() {\n      this.playersObj = this.wrestlerForm.value;\n      if (this.wrestlerForm.valid) {\n        this.submitWrestler.emit(this.wrestlerForm.value);\n      }\n      this.confirm();\n    }\n    getMovesControls() {\n      return this.wrestlerForm.get('moves').controls;\n    }\n    cancel() {\n      this.dialogRef.close({\n        type: 'cancel',\n        data: 'you cancelled'\n      });\n    }\n    confirm() {\n      this.dialogRef.close({\n        type: 'confirm',\n        data: this.playersObj\n      });\n    }\n    static #_ = this.ɵfac = function EnterWrestlerDetailsComponent_Factory(t) {\n      return new (t || EnterWrestlerDetailsComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.MatDialogRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: EnterWrestlerDetailsComponent,\n      selectors: [[\"app-enter-wrestler-details\"]],\n      outputs: {\n        submitWrestler: \"submitWrestler\"\n      },\n      decls: 22,\n      vars: 5,\n      consts: [[1, \"about-right-block\"], [1, \"custom-text\", 3, \"formGroup\"], [1, \"custom-form-block\"], [\"appearance\", \"outline\", 1, \"form-group\", \"form-adjustment\"], [\"matInput\", \"\", \"formControlName\", \"name\", \"required\", \"\"], [4, \"ngIf\"], [1, \"custom-margin\"], [\"type\", \"number\", \"matInput\", \"\", \"formControlName\", \"health\", \"required\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"accent\", \"type\", \"button\", 3, \"click\"], [\"formArrayName\", \"moves\"], [3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\", \"click\"], [3, \"formGroupName\"], [\"matInput\", \"\", \"id\", \"moveName\", \"type\", \"text\", \"formControlName\", \"name\", \"required\", \"\"], [\"matInput\", \"\", \"id\", \"moveDamage\", \"type\", \"number\", \"formControlName\", \"damage\", \"required\", \"\"], [\"appearance\", \"outline\"], [\"formControlName\", \"type\", \"matNativeControl\", \"\", \"required\", \"\"], [\"value\", \"signature\"], [\"value\", \"finisher\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", \"type\", \"button\", 3, \"click\"]],\n      template: function EnterWrestlerDetailsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"div\", 2)(3, \"div\")(4, \"mat-form-field\", 3)(5, \"mat-label\");\n          i0.ɵɵtext(6, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 4);\n          i0.ɵɵtemplate(8, EnterWrestlerDetailsComponent_mat_error_8_Template, 2, 0, \"mat-error\", 5);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(9, \"div\", 6)(10, \"mat-form-field\", 3)(11, \"mat-label\");\n          i0.ɵɵtext(12, \"Health\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(13, \"input\", 7);\n          i0.ɵɵtemplate(14, EnterWrestlerDetailsComponent_mat_error_14_Template, 2, 0, \"mat-error\", 5);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(15, \"div\", 6)(16, \"button\", 8);\n          i0.ɵɵlistener(\"click\", function EnterWrestlerDetailsComponent_Template_button_click_16_listener() {\n            return ctx.addMove();\n          });\n          i0.ɵɵtext(17, \"Add Move\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(18, \"div\", 9);\n          i0.ɵɵtemplate(19, EnterWrestlerDetailsComponent_div_19_Template, 24, 1, \"div\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"button\", 11);\n          i0.ɵɵlistener(\"click\", function EnterWrestlerDetailsComponent_Template_button_click_20_listener() {\n            return ctx.addPlayer();\n          });\n          i0.ɵɵtext(21, \"Submit\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.wrestlerForm);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngIf\", ctx.wrestlerForm.controls[\"name\"] == null ? null : ctx.wrestlerForm.controls[\"name\"].errors);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngIf\", ctx.wrestlerForm.controls[\"health\"] == null ? null : ctx.wrestlerForm.controls[\"health\"].errors);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngForOf\", ctx.getMovesControls());\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"disabled\", ctx.wrestlerForm.invalid || ctx.wrestlerForm.value.moves.length == 0);\n        }\n      },\n      dependencies: [i3.NgForOf, i3.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName, i4.MatFormField, i4.MatLabel, i4.MatError, i5.MatInput, i6.MatButton],\n      styles: [\".about-right-block[_ngcontent-%COMP%]{background-color:#424242;width:-moz-fit-content;width:fit-content;max-height:35rem;overflow-y:auto;padding:2rem}.about-right-block[_ngcontent-%COMP%]   .custom-margin[_ngcontent-%COMP%]{margin-left:1rem}@media (max-width: 767px){.about-right-block[_ngcontent-%COMP%]{width:unset;max-height:35rem;overflow-y:auto}.about-right-block[_ngcontent-%COMP%]   .custom-margin[_ngcontent-%COMP%]{margin-left:unset;margin-bottom:1rem}}.about-right-block[_ngcontent-%COMP%]   .form-adjustment[_ngcontent-%COMP%]{width:100%}.custom-form-block[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap}\"]\n    });\n  }\n  return EnterWrestlerDetailsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}