{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/material/button\";\nfunction EnterWrestlerDetailsComponent_mat_error_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Name Required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EnterWrestlerDetailsComponent_mat_error_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Health 0 to 100 reuired\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EnterWrestlerDetailsComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"div\", 2)(2, \"div\")(3, \"mat-form-field\", 3)(4, \"mat-label\");\n    i0.ɵɵtext(5, \"Move Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 13);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 6)(8, \"mat-form-field\", 3)(9, \"mat-label\");\n    i0.ɵɵtext(10, \"Move Damage:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"input\", 14);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(12, \"div\", 6)(13, \"mat-form-field\", 15)(14, \"mat-label\");\n    i0.ɵɵtext(15, \"Move Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"select\", 16)(17, \"option\", 17);\n    i0.ɵɵtext(18, \"Signature\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"option\", 18);\n    i0.ɵɵtext(20, \"Finisher\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(21, \"div\", 6)(22, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function EnterWrestlerDetailsComponent_div_19_Template_button_click_22_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const i_r4 = restoredCtx.index;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.removeMove(i_r4));\n    });\n    i0.ɵɵtext(23, \"Remove Move\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const i_r4 = ctx.index;\n    i0.ɵɵproperty(\"formGroupName\", i_r4);\n  }\n}\nexport class EnterWrestlerDetailsComponent {\n  constructor(fb, dialogRef, cdr) {\n    this.fb = fb;\n    this.dialogRef = dialogRef;\n    this.cdr = cdr;\n    this.submitWrestler = new EventEmitter();\n    this.images = [\"../../assets/charlotte-flair.png\", \"../../assets/john-cena-render-1-png-clipart.jpg\", \"../../assets/The-Rock-PNG-Picture.png\", \"../../assets/WWE-PNG-Free-Download.png\"];\n    this.wrestlerForm = this.fb.group({\n      name: ['', Validators.required],\n      health: [100, [Validators.required, Validators.min(0), Validators.max(100)]],\n      moves: this.fb.array([])\n    });\n  }\n  addMove() {\n    const moves = this.wrestlerForm.get('moves');\n    moves.push(this.fb.group({\n      name: ['', Validators.required],\n      damage: [0, [Validators.required, Validators.min(0), Validators.max(100)]],\n      type: ['', Validators.required]\n    }));\n    this.cdr.detectChanges();\n  }\n  removeMove(index) {\n    const moves = this.wrestlerForm.get('moves');\n    moves.removeAt(index);\n    this.cdr.detectChanges();\n  }\n  addPlayer() {\n    this.playersObj = this.wrestlerForm.value;\n    if (this.wrestlerForm.valid) {\n      this.submitWrestler.emit(this.wrestlerForm.value);\n    }\n    this.confirm();\n  }\n  getMovesControls() {\n    return this.wrestlerForm.get('moves').controls;\n  }\n  cancel() {\n    this.dialogRef.close({\n      type: 'cancel',\n      data: 'you cancelled'\n    });\n  }\n  confirm() {\n    this.dialogRef.close({\n      type: 'confirm',\n      data: this.playersObj\n    });\n  }\n  static #_ = this.ɵfac = function EnterWrestlerDetailsComponent_Factory(t) {\n    return new (t || EnterWrestlerDetailsComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.MatDialogRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EnterWrestlerDetailsComponent,\n    selectors: [[\"app-enter-wrestler-details\"]],\n    outputs: {\n      submitWrestler: \"submitWrestler\"\n    },\n    decls: 22,\n    vars: 5,\n    consts: [[1, \"about-right-block\"], [1, \"custom-text\", 3, \"formGroup\"], [1, \"custom-form-block\"], [\"appearance\", \"outline\", 1, \"form-group\", \"form-adjustment\"], [\"matInput\", \"\", \"formControlName\", \"name\", \"required\", \"\"], [4, \"ngIf\"], [1, \"custom-margin\"], [\"type\", \"number\", \"matInput\", \"\", \"formControlName\", \"health\", \"required\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"accent\", \"type\", \"button\", 3, \"click\"], [\"formArrayName\", \"moves\"], [3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\", \"click\"], [3, \"formGroupName\"], [\"matInput\", \"\", \"id\", \"moveName\", \"type\", \"text\", \"formControlName\", \"name\", \"required\", \"\"], [\"matInput\", \"\", \"id\", \"moveDamage\", \"type\", \"number\", \"formControlName\", \"damage\", \"required\", \"\"], [\"appearance\", \"outline\"], [\"formControlName\", \"type\", \"matNativeControl\", \"\", \"required\", \"\"], [\"value\", \"signature\"], [\"value\", \"finisher\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", \"type\", \"button\", 3, \"click\"]],\n    template: function EnterWrestlerDetailsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1)(2, \"div\", 2)(3, \"div\")(4, \"mat-form-field\", 3)(5, \"mat-label\");\n        i0.ɵɵtext(6, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 4);\n        i0.ɵɵtemplate(8, EnterWrestlerDetailsComponent_mat_error_8_Template, 2, 0, \"mat-error\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 6)(10, \"mat-form-field\", 3)(11, \"mat-label\");\n        i0.ɵɵtext(12, \"Health\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 7);\n        i0.ɵɵtemplate(14, EnterWrestlerDetailsComponent_mat_error_14_Template, 2, 0, \"mat-error\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"div\", 6)(16, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function EnterWrestlerDetailsComponent_Template_button_click_16_listener() {\n          return ctx.addMove();\n        });\n        i0.ɵɵtext(17, \"Add Move\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(18, \"div\", 9);\n        i0.ɵɵtemplate(19, EnterWrestlerDetailsComponent_div_19_Template, 24, 1, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function EnterWrestlerDetailsComponent_Template_button_click_20_listener() {\n          return ctx.addPlayer();\n        });\n        i0.ɵɵtext(21, \"Submit\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.wrestlerForm);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.wrestlerForm.controls[\"name\"] == null ? null : ctx.wrestlerForm.controls[\"name\"].errors);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.wrestlerForm.controls[\"health\"] == null ? null : ctx.wrestlerForm.controls[\"health\"].errors);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.getMovesControls());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.wrestlerForm.invalid || ctx.wrestlerForm.value.moves.length == 0);\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName, i4.MatFormField, i4.MatLabel, i4.MatError, i5.MatInput, i6.MatButton],\n    styles: [\".about-right-block[_ngcontent-%COMP%] {\\n  background-color: #424242;\\n  width: -moz-fit-content;\\n  width: fit-content;\\n  max-height: 35rem;\\n  overflow-y: auto;\\n  padding: 2rem;\\n}\\n.about-right-block[_ngcontent-%COMP%]   .custom-margin[_ngcontent-%COMP%] {\\n  margin-left: 1rem;\\n}\\n@media (max-width: 767px) {\\n  .about-right-block[_ngcontent-%COMP%] {\\n    width: unset;\\n    max-height: 35rem;\\n    overflow-y: auto;\\n  }\\n  .about-right-block[_ngcontent-%COMP%]   .custom-margin[_ngcontent-%COMP%] {\\n    margin-left: unset;\\n    margin-bottom: 1rem;\\n  }\\n}\\n.about-right-block[_ngcontent-%COMP%]   .form-adjustment[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\n.custom-form-block[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-wrap: wrap;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZW50ZXItd3Jlc3RsZXItZGV0YWlscy9lbnRlci13cmVzdGxlci1kZXRhaWxzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UseUJBQUE7RUFDRSx1QkFBQTtFQUFBLGtCQUFBO0VBQ0EsaUJBQUE7RUFDQSxnQkFBQTtFQUtBLGFBQUE7QUFISjtBQURJO0VBQ0UsaUJBQUE7QUFHTjtBQUNJO0VBVko7SUFnQk0sWUFBQTtJQUNFLGlCQUFBO0lBQ0EsZ0JBQUE7RUFITjtFQUpJO0lBRUUsa0JBQUE7SUFDQSxtQkFBQTtFQUtOO0FBQ0Y7QUFBSTtFQUNFLFdBQUE7QUFFTjs7QUFFQTtFQUNFLGFBQUE7RUFBZSxlQUFBO0FBRWpCIiwic291cmNlc0NvbnRlbnQiOlsiLmFib3V0LXJpZ2h0LWJsb2NrIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzQyNDI0MjtcbiAgICB3aWR0aDogZml0LWNvbnRlbnQ7XG4gICAgbWF4LWhlaWdodDogMzVyZW07XG4gICAgb3ZlcmZsb3cteTogYXV0bztcbiAgICAuY3VzdG9tLW1hcmdpbntcbiAgICAgIG1hcmdpbi1sZWZ0OjFyZW07XG4gICAgfVxuICAgIFxuICAgIHBhZGRpbmc6IDJyZW07XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gICAgICAuY3VzdG9tLW1hcmdpbntcbiAgICAgIFxuICAgICAgICBtYXJnaW4tbGVmdDogdW5zZXQ7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDFyZW07XG4gICAgICB9XG4gICAgICB3aWR0aDogdW5zZXQ7XG4gICAgICAgIG1heC1oZWlnaHQ6IDM1cmVtO1xuICAgICAgICBvdmVyZmxvdy15OiBhdXRvO1xuICAgICAgfVxuICAgIC5mb3JtLWFkanVzdG1lbnQge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgfVxuICB9XG5cbi5jdXN0b20tZm9ybS1ibG9ja3tcbiAgZGlzcGxheTogZmxleDsgZmxleC13cmFwOiB3cmFwO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["EventEmitter","Validators","i0","EnterWrestlerDetailsComponent","constructor","fb","dialogRef","cdr","wrestlerForm","group","name","required","health","min","max","moves","array","addMove","get","push","damage","type","detectChanges","removeMove","index","removeAt","addPlayer","playersObj","value","valid","submitWrestler","emit","confirm","getMovesControls","controls","cancel","close","data","selectors","outputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/vishalpanchidi/Desktop/sandbox_project/wrestlemania/src/app/enter-wrestler-details/enter-wrestler-details.component.ts","/Users/vishalpanchidi/Desktop/sandbox_project/wrestlemania/src/app/enter-wrestler-details/enter-wrestler-details.component.html"],"sourcesContent":["import { ChangeDetectorRef, Component, EventEmitter, Output } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-enter-wrestler-details',\n  templateUrl: './enter-wrestler-details.component.html',\n  styleUrls: ['./enter-wrestler-details.component.scss']\n})\nexport class EnterWrestlerDetailsComponent {\n  @Output() submitWrestler = new EventEmitter<any>();\n  images=[\"../../assets/charlotte-flair.png\",\"../../assets/john-cena-render-1-png-clipart.jpg\",\"../../assets/The-Rock-PNG-Picture.png\",\"../../assets/WWE-PNG-Free-Download.png\"]\n\n  wrestlerForm: FormGroup;\n  playersObj:any;\n\n  constructor(private fb: FormBuilder,private dialogRef: MatDialogRef<EnterWrestlerDetailsComponent>,private cdr: ChangeDetectorRef) {\n    this.wrestlerForm = this.fb.group({\n      name: ['', Validators.required],\n      health: [100, [Validators.required, Validators.min(0), Validators.max(100)]],\n      moves: this.fb.array([]),\n    });\n  }\n\n  addMove() {\n    const moves = this.wrestlerForm.get('moves') as any;\n\n    moves.push(this.fb.group({\n      name: ['', Validators.required],\n      damage: [0, [Validators.required, Validators.min(0), Validators.max(100)]],\n      type: ['', Validators.required],\n    }));\n    this.cdr.detectChanges();\n  }\n\n  removeMove(index: number) {\n\n    const moves = this.wrestlerForm.get('moves') as any;\n    moves.removeAt(index);\n    this.cdr.detectChanges();\n  }\n\n  addPlayer() {\n   \n    this.playersObj = this.wrestlerForm.value\n    if (this.wrestlerForm.valid) {\n      this.submitWrestler.emit(this.wrestlerForm.value);\n    }\n \n    this.confirm()\n  }\n\n  getMovesControls() {\n    return (this.wrestlerForm.get('moves') as FormArray).controls;\n  }\n\ncancel() {\n  this.dialogRef.close({ type:'cancel',data: 'you cancelled' })\n}\n\nconfirm() {\n  this.dialogRef.close({ type:'confirm',data: this.playersObj })\n  \n}\n\n\n}\n","\n \n  <div class=\"about-right-block\">\n\n\n    <form class=\"custom-text\" [formGroup]=\"wrestlerForm\">\n      <div class=\"custom-form-block\" >\n        <div>\n          <mat-form-field appearance=\"outline\" class=\"form-group form-adjustment\">\n            <mat-label>Name</mat-label>\n            <input matInput formControlName=\"name\" required>\n            \n            <mat-error *ngIf=\"wrestlerForm.controls['name']?.errors\">Name Required</mat-error>\n          </mat-form-field>\n        </div>\n        <div class =\"custom-margin\" >\n          <mat-form-field appearance=\"outline\" class=\"form-group form-adjustment\">\n            <mat-label>Health</mat-label>\n            <input type=\"number\" matInput formControlName=\"health\" required>\n            <mat-error *ngIf=\"wrestlerForm.controls['health']?.errors\"> Health 0 to 100 reuired</mat-error>\n\n  \n          </mat-form-field>\n  \n        </div>  \n        <div class =\"custom-margin\" >\n          <button mat-raised-button color=\"accent\" type=\"button\" (click)=\"addMove()\">Add Move</button>\n        </div>\n\n      </div>\n     \n      <div formArrayName=\"moves\">\n        <div *ngFor=\"let move of getMovesControls(); let i = index\" [formGroupName]=\"i\">\n          <div class=\"custom-form-block\" >\n            <div>\n              <mat-form-field appearance=\"outline\" class=\"form-group form-adjustment\">\n                <mat-label>Move Name</mat-label>\n                <input matInput id=\"moveName\" type=\"text\" formControlName=\"name\" required>\n                \n              </mat-form-field>\n            </div>\n            <div class =\"custom-margin\" > \n              <mat-form-field appearance=\"outline\" class=\"form-group form-adjustment\">\n                <mat-label>Move Damage:</mat-label>\n                <input matInput id=\"moveDamage\" type=\"number\" formControlName=\"damage\" required>\n                \n              </mat-form-field>\n            </div>\n  \n            <div class =\"custom-margin\">\n             \n              <mat-form-field  appearance=\"outline\">\n                <mat-label>Move Type</mat-label>\n                <select formControlName=\"type\"  matNativeControl required>\n                  <option value=\"signature\">Signature</option>\n                  <option value=\"finisher\">Finisher</option>\n                </select>\n              </mat-form-field>\n            </div>\n            <div class =\"custom-margin\">\n              <button mat-raised-button color=\"warn\" type=\"button\" (click)=\"removeMove(i)\">Remove Move</button>\n  \n            </div>\n          </div>\n         \n          \n\n          \n        </div>\n      </div>\n\n  \n\n      <button mat-raised-button color=\"primary\" [disabled]=\"wrestlerForm.invalid || wrestlerForm.value.moves.length == 0\" color=\"primary\" type=\"submit\"\n        (click)=\"addPlayer()\">Submit</button>\n\n\n    </form>\n\n  </div>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}